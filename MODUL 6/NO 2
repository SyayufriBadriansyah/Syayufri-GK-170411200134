#include <windows.h>
#ifdef __APPLE__
#include <GLUT/glut.h>
#else
#include <GL/glut.h>
#endif
#include <stdlib.h>


float w = 0;
float xx = 0;
float yy = 0;
float zz = 0;

void balok(float ss){
    float xx=(ss/2);
    float yy=(ss/2);
    float zz=(ss/2);
    glColor3f(0,0,1);
    glBegin(GL_POLYGON);
        glVertex3f(-xx,yy,zz);
        glVertex3f(xx,yy,zz);
        glVertex3f(xx,-yy,zz);
        glVertex3f(-xx,-yy,zz);
    glEnd();
    glColor3f(0,1,0);
    glBegin(GL_POLYGON);
        glVertex3f(-xx,yy,-zz);
        glVertex3f(xx,yy,-zz);
        glVertex3f(xx,-yy,-zz);
        glVertex3f(-xx,-yy,-zz);
    glEnd();
    glColor3f(0,1,1);
    glBegin(GL_POLYGON);
        glVertex3f(xx,yy,zz);
        glVertex3f(xx,yy,-zz);
        glVertex3f(xx,-yy,-zz);
        glVertex3f(xx,-yy,zz);
    glEnd();
    glColor3f(1,0,0);
    glBegin(GL_POLYGON);
        glVertex3f(-xx,-yy,zz);
        glVertex3f(-xx,-yy,-zz);
        glVertex3f(-xx,yy,-zz);
        glVertex3f(-xx,yy,zz);
    glEnd();
    glColor3f(1,0,1);
    glBegin(GL_POLYGON);
        glVertex3f(-xx,yy,zz);
        glVertex3f(-xx,yy,-zz);
        glVertex3f(xx,yy,-zz);
        glVertex3f(xx,yy,zz);
    glEnd();
    glColor3f(1,1,0);
    glBegin(GL_POLYGON);
        glVertex3f(-xx,-yy,zz);
        glVertex3f(-xx,-yy,-zz);
        glVertex3f(xx,-yy,-zz);
        glVertex3f(xx,-yy,zz);
    glEnd();
}

void display(void) {

    glClear(GL_COLOR_BUFFER_BIT|GL_DEPTH_BUFFER_BIT);
    glColor3f(1.0, 1.0, 1.0);

    glPointSize(10);

    glRotatef(w,xx,yy,zz);

    glPushMatrix();
    glScalef(4,1,1);
    balok(2);
    glPopMatrix();

    glPushMatrix();
    glScalef(1,4,1);
    balok(2);
    glPopMatrix();

    glFlush();
}

void keykeyboard(unsigned char key, int x, int y) {
    switch (key) {
    case 'q':
        exit(0);
        break;
    case 'w':
        w=1;
        xx=1;
        yy=0;
        zz=0;
        glutPostRedisplay();
        break;

    case 'e':
        w=1;
        xx=0;
        yy=1;
        zz=0;
        glutPostRedisplay();
        break;

    case 'r':
        w=1;
        xx=0;
        yy=0;
        zz=1;
        glutPostRedisplay();
        break;
    }
}

void init(void) {
    glClearColor (0.0, 0.0, 0.0, 0.0);
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    glOrtho(-10.0, 10.0, -10.0, 10.0, -10.0, 10.0);
    glMatrixMode(GL_MODELVIEW);
    glShadeModel (GL_FLAT);
    glEnable(GL_DEPTH_TEST);
}

int main(int argc, char** argv) {
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_RGB | GLUT_DEPTH);
    glutInitWindowSize(400, 400);
    glutInitWindowPosition(100, 100);
    glutCreateWindow("Balok Silang");
    init();
    glutDisplayFunc(display);
    glutKeyboardFunc(keykeyboard);
    glutMainLoop();
    return 0;
}
